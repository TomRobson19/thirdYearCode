#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Software, Systems and Applications III â€“ Computer Vision
\end_layout

\begin_layout Author
Tom Robson - hzwr87
\end_layout

\begin_layout Section*
Preprocessing
\end_layout

\begin_layout Standard
Following a close examination of the dataset, it was determined that all
 of the foreground edges required could be found in the lower 30% of the
 image.
 Therefore, the first step in preprocessing was to crop out the top 70%
 of the image, as this removes a substantial proportion of the noise, and
 therefore a substantial proportion of the potential false positives.
 Next was the conversion to the grayscale colour space.
 Conversion to the HSV colour space was attempted, as well as converting
 to grayscale using a weighted sum of the H and S colour channels, but these
 gave an inferior output to the standard grayscale conversion when used
 for edge detection.
 Another approach attempted for this was to identify the dominant colour
 in the road lines, and filter out all pixels that did not have this dominant
 colour.
 However, this did not prove to be very effective.
 The next step was to apply blurring to the image.
 A Gaussian filter was initially considered, but it was decided that a Bilateral
 filter gave superior results, so this was implemented.
 The combination of these preprocessing techniques gave the best results
 to the edge detector of all the techniques attempted.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/gray.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Grayscale
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/hsv.png
	scale 20

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
HSV
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/Bilateral.png
	scale 20

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Bilateral Filter on Grayscale
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Preprocessing
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
Edge detection
\end_layout

\begin_layout Standard
Following the preprocessing of the images, the next step was to pass them
 to an edge detector.
 In this case, the OpenCV Canny function was used.
 In order to optimise this, an auto-canny method was implemented to adapt
 the thresholds to suit each image by finding the median of the grayscale
 pixel values of the filtered image, and multiplying this by 0.67 for the
 lower threshold or 1.33 for the higher threshold.
 On examination of the output of this Canny function, it was clear that
 further processing was necessary.
 To try and remove noise from the image, morphological opening was implemented.
 This effectively removed much of the noise while leaving the road lines
 relatively unharmed.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/canny.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Simple Canny
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/opening.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
After morphological opening
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Edge Detection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
RANSAC
\end_layout

\begin_layout Standard
Having detected these edges, the next task was to implement the RANSAC algorithm
 to try and detect which of these edges were true roadlines.
 This was done by randomly selecting two of the non-zero pixels in the canny
 image and drawing a line between them.
 The gradient of this line was then calculated, and used to extend the line
 over the whole of the bottom 30% of the image.
 Due to the fact that the vast majority of the foreground lines that are
 of interest to us are close to vertical, any line with a gradient close
 to horizontal was eliminated.
 This greatly reduced the number of false positives returned by the algorithm.
 From here, this line is drawn onto a blank image, and compared to the canny
 image using a bitwise AND operation.
 If the number of common pixels is above the threshold, then the line is
 accepted.
 Then, for each of the accepted lines, we compare them to existing lines
 drawn on the image and check if their gradient is too similar, if the lines
 cross over each other or if their x and y coordinates are too close together.
 This gives a more accurate count of the lines found per image, rather than
 having RANSAC find many lines associated with the same road line in the
 actual image.
 This gives the results shown in the output files.
 After all of the trials have been done, if no acceptable line has been
 found the algorithm is run again with a lower threshold to try and find
 a line.
 This is run until a line is found, or until the threshold gets too low,
 in which case it is accepted that no line is found.
 This approach slows down runtime and generates some false positives, but
 also finds more valid lines so it has been decided that it is worth it.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/noIfStatement.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
All lines found
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figuresForReport/img0.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Lines filtered down
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of RANSAC outputs
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Evaluation
\end_layout

\begin_layout Standard
Across the majority of the data set, this implementation performed well.
 
\end_layout

\end_body
\end_document
