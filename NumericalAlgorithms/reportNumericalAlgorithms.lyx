#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Computing Methodologies III â€“ Numerical Algorithms
\end_layout

\begin_layout Author
Tom Robson - hzwr87
\end_layout

\begin_layout Section*
Part 1
\end_layout

\begin_layout Standard
The implementation of step 1 begins by initialising the positions and velocities
 of the particles.
 Both of these can be done in two different ways.
 The position is normally allocated randomly, by calculating a random number
 between 0 and 1 in each dimension, but the option is present in the implementat
ion to specify the position of 2 particles (or more as required) to facilitate
 the experiments in step 2.
 The initial velocity can either be set to zero, or a random value between
 
\begin_inset Formula $-10^{-5}$
\end_inset

 and 
\begin_inset Formula $10^{-5}$
\end_inset

 depending on the timestep approach used, which will be discussed later.
\end_layout

\begin_layout Standard
From this point, we then move onto the force calculations.
 We first select the particle we will be examining, and set its forces in
 each dimension to 0.
 We then loop through each of the remaining particles with higher indexes
 that the current particle and calculate the force that each is applying
 to our selected particle.
 Due to the wrap around forces, this must be done 27 times per particle
 to ensure the force that each image of each particle applies in the Lennard
 Jones model is applied in our simulation.
\end_layout

\begin_layout Standard
For each image of the particle, we first calculate the distances in each
 dimension using the array of unit cubes, named 'boxes' in the code.
 From these distances, we compute the euclidean distance between the particle
 and each of these images.
 From here, we employ the Lennard Jones potential equation, and multiply
 this by the quotient of the distance in each dimension and the euclidean
 distance.
 The sum of these forces across all images of all other particles give us
 our force being applied to our original particle.
\end_layout

\begin_layout Standard
We then use the product of this total force and the timestep size to calculate
 the new velocity, adding this on to the existing velocity in each dimension
 for the current particle, and subtracting this .
 This new velocity is also calculated for the other particle by subtracting
 the product of timestep and force rather than adding.
 This means that each particle only needs to loop through those numbered
 higher than this, reducing the computation time of the simulation.
 After all the updated velocities have been calculated for all particles,
 we then do a new loop through all of the particles to update the position
 in each dimension by adding on the product of the timestep size and the
 velocity in each dimension.
 We then use floor division on these new positions to ensure the particles
 stay within the unit cube.
 
\end_layout

\begin_layout Standard
Like the calculations of the velocities, the timestep has been implemented
 two different ways.
 If the particles are given a starting velocity, the timestep is fixed at
 
\begin_inset Formula $10^{-6}$
\end_inset

.
 However, if the starting velocity is zero, then a variable time step has
 been implemented based on the euclidean distance between the closest two
 particles.
 We use a threshold for this smallest distance, if it is under 0.0002, the
 timestep is equal to the shortest distance, if it is over 0.0002, then the
 timestep is equal to 
\begin_inset Formula $r^{3}\times10^{12}$
\end_inset

, where r is the shortest distance.
 Both the equation and the threshold was determined by experimentation.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
IMPLEMENT VARIABLE TIME STEPS - distance related to time step^2
\end_layout

\begin_layout Plain Layout
Also done initial velocity as per FAQ
\end_layout

\begin_layout Plain Layout
Brief description of step 1 is precise (2 marks), clear (2 marks) and addresses
 the three remarks given (3x2 marks).
 Use sketches and/or screenshots to make your report easy to follow
\end_layout

\begin_layout Plain Layout
It computes the right forces, it is efficient (no unnecessary calculations),
 it updates the particle positions correctly, and it realises the boundary
 conditions as described (5 marks each)
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Part 2
\end_layout

\begin_layout Standard
For the experiments with only two particles, the values of the constants
 a and s have been changed from 
\begin_inset Formula $10^{-5}$
\end_inset

 to 
\begin_inset Formula $0.1$
\end_inset

.
 Whilst the interaction does still occur with a and s being 
\begin_inset Formula $10^{-5}$
\end_inset

, it is difficult to show the behaviour of the particles clearly with a
 fixed time step size.
 Therefore this change of values has been made, in order to show how the
 particles interact more clearly.
 
\end_layout

\begin_layout Standard
The interaction of the particles when they are placed at (0.4,0.5,0.5) and
 (0.6,0.5,0.5) is an attraction until the distance gets close enough for the
 sign of the force to change, and they then start to oscillate, with the
 force changing between attraction and repulsion, as show in this video:
 
\begin_inset CommandInset href
LatexCommand href
target "https://www.youtube.com/watch?v=6nED3uGmCQw"

\end_inset

.
 This behaviour also occurs with a and s equal to 
\begin_inset Formula $10^{-5}$
\end_inset

, but the distance between the particles when the sign flips is very small,
 so it is more difficult to visualise.
 As the particles oscillate, the distance that they are apart in each oscillatio
n decreases.
 Eventually, given enough time steps, the theory suggests that they should
 get to a stage where the force becomes zero, and they stop oscillating
 as they are in equilibrium.
 The distance 
\begin_inset Formula $r$
\end_inset

 between the particles where this occurs can be calculated using the equation.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $4a(\nicefrac{12s^{12}}{r^{13}}-\nicefrac{6s^{6}}{r^{7}})=0$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\nicefrac{12s^{12}}{r^{13}}=\nicefrac{6s^{6}}{r^{7}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\nicefrac{12s^{12}}{6s^{6}}=\nicefrac{r^{13}}{r^{7}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $2s^{6}=r^{6}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $r=\sqrt[6]{2s^{6}}$
\end_inset


\end_layout

\begin_layout Standard
When s has a value of 
\begin_inset Formula $0.1$
\end_inset

, this distance is approximately 
\begin_inset Formula $0.11225$
\end_inset

, whereas when s has a value of 
\begin_inset Formula $10^{-5}$
\end_inset

, this distance is approximately 
\begin_inset Formula $1.1225\times10^{-5}$
\end_inset

.
 
\end_layout

\begin_layout Standard
The relationship is similar when the particles are positioned at (0.1,0.5,0.5)
 and (0.9,0.5,0.5), but due to the wrap-around forces from the images of the
 particles as described in part 1, the attractive forces are towards the
 edge of the box.
 The particles then oscillate at the edges of the box.
 Again, this is easier to observe with a and s equal to 
\begin_inset Formula $0.1$
\end_inset

, and this is clearly shown in this video: 
\begin_inset CommandInset href
LatexCommand href
target "https://www.youtube.com/watch?v=4qtaPcyRIRc"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Per setup: Result is correct qualitatively (2 marks), convergence rate is
 reasonable w.r.t.
 time step size (4 marks), description is accurate and precise (2 marks),
 results are interpreted correctly (2 marks).
\end_layout

\begin_layout Plain Layout
Use N=2 and place the particles without any velocity at x=(0.4,0.5,0.5) and
 x=(0.6,0.5,0.5).
 What happens qualitatively? Run your experiments with different time steps
 over a fixed time interval T.
 Ensure that T is chosen such that the sign of F at least flips twice.
 Track the final position.
 What can you observe w.r.t.
 accuracy and the ODE characteristics? 
\end_layout

\begin_layout Plain Layout
Rerun the same experiment with x=(0.1,0.5,0.5) and x=(0.9,0.5,0.5).
 What happens?
\end_layout

\begin_layout Plain Layout
Rerun the experiment with N=100, N=1,000, N=10,000, N=100,000, and so forth
 where all particles are placed randomly within the cube.
 As the cube is fixed, adding more particles increases the gas density,
 i.e.
 we start to study condensation/saturation processes.
 What can you observe quantitatively and what can you observe in terms of
 cost (time to solution)?
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Part 3
\end_layout

\begin_layout Standard
The data structure chosen to implement step 3 is a Verlet List.
 This was implemented as an array of C++ vectors, updated every 100 timesteps.
 The idea of this is to loop through each particle in the simulation, and
 calculate the euclidean distance between this particle and all others.
 If this is less than the threshold specified in the assignment brief, 2.5s,
 then this particle is added to the list of neighbours.
 Due to how little movement occurs per timestep, this is only updated every
 100 timesteps.
 
\end_layout

\begin_layout Standard
The euclidean distance calculations are the most computationally expensive
 part of this simulation, and this approach vastly minimises the number
 of these required, as very few particles will ever be in the threshold
 neighbourhood due to its small size.
 This means that for 99 out of every 100 timesteps, this method is far more
 efficient than step 1, meaning that it runs far quicker on both small and
 large numbers of particles, as has been shown experimentally.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Brief description of step 3 is precise and clear (5 marks).
 Runtime impact is experimentally determined and explanation for runtime
 behaviour is given (5 marks).
 Error is determined through Taylor expansion (5 marks).
 All experiments are rerun and results are discussed (5 marks).
\end_layout

\end_inset


\end_layout

\end_body
\end_document
