#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style agsm
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Software, Systems and Applications
\end_layout

\begin_layout Author
Tom Robson - hzwr87
\end_layout

\begin_layout Section*
Select the title nodes of the books that have a price higher than 35 :
\end_layout

\begin_layout Subsection*
Query
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

/bookstore/book[price>35]/title
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Result
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<title lang=italian>Spaghetti Ricette</title>
\end_layout

\begin_layout Plain Layout

<title>XQuery Start</title>
\end_layout

\begin_layout Plain Layout

<title>Learning XML</title>
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Select the first author of each book with category “Web”
\end_layout

\begin_layout Subsection*
Query
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

/bookstore/book[@category = 'Web']/author[1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Result
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<author>Per Bothner</author> 
\end_layout

\begin_layout Plain Layout

<author>Erik Ray</author>
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Find the second author of the books of year 2003 with price more than 40.
\end_layout

\begin_layout Subsection*
Query
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

for $x in /bookstore/book 
\end_layout

\begin_layout Plain Layout

where $x/price>40 and $x/year=2003 
\end_layout

\begin_layout Plain Layout

order by $x/author[2] 
\end_layout

\begin_layout Plain Layout

return $x/author[2]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Result
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<author>Kurt Cagle</author>
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Find the authors of all books that have price higher than the average price
 of the books of year 2005.
\end_layout

\begin_layout Subsection*
Query
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

let $average := avg(/bookstore/book[year='2005']/price)
\end_layout

\begin_layout Plain Layout

for $x in /bookstore/book where $x/price > $average 
\end_layout

\begin_layout Plain Layout

return $x/author[$x]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Result
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<author>Giada Laurentis</author> 
\end_layout

\begin_layout Plain Layout

<author>Per Bothner</author> 
\end_layout

\begin_layout Plain Layout

<author>Kurt Cagle</author> 
\end_layout

\begin_layout Plain Layout

<author>James Linn</author> 
\end_layout

\begin_layout Plain Layout

<author>Vaidy Nagar</author> 
\end_layout

\begin_layout Plain Layout

<author>Erik Ray</author>
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Find the book categories that correspond to more than one book.
\end_layout

\begin_layout Subsection*
Query
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

let $categories := fn:distinct-values(bookstore/book/[@category])
\end_layout

\begin_layout Plain Layout

for $category in $categories 
\end_layout

\begin_layout Plain Layout

let $count := fn:count(bookstore/book[@category = $category]) 
\end_layout

\begin_layout Plain Layout

order by $count 
\end_layout

\begin_layout Plain Layout

where $count > 1 
\end_layout

\begin_layout Plain Layout

return ($category)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Result
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Web
\end_layout

\end_inset


\end_layout

\end_body
\end_document
